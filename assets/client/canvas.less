//	The base style definitions, including helpers for common layout needs.
//	Specificity is minimized to allow plugin styles to always take precedence.

//	Clear U.A.
* {
	margin: 0px;
	padding: 0px;
	box-sizing: border-box;
}

.container(){
	width: 100%;
	height: 100%;
	background-color: @background;
}

html {
	.container();
	
	body {
		.container();
		//position: relative;
		color: @text;

		font-family: @text-font;
		font-size: 12pt;

		& > .meta {
			display: none;
		}
	}
}

[cv-event] {
	cursor: pointer;
}

a {
	color: @link;

	&:not(.button):visited {
		color: @visited-link;
	}

	&.clear {
		text-decoration: none;
		color: @text;
	}
}

//	Paragraph styles.
p {
	margin: 1em 0px;
	font-size: 12pt;
	line-height: 1.4;
	color: @text;
}

ul, ol {
	margin-left: 1.5em;
}

p, li {
	line-height: 1.5;
}

.subtext {
	color: @subtext;
	font-size: 11pt;
}

.large-text {
	font-size: 20pt;
}

//	Heading styles.
h1, h2, h3, h4 {
	margin: 0.25em 0em 0.5em 0em;
	font-size: 40pt; 
	font-weight: normal;
	font-family: @title-font;
	color: @title;
}
h2 { font-size: 25pt; }
h3 { font-size: 18pt; }
h4 { font-size: 16pt; }

//	Form styles.
.error-summary {
	color: @error;
}

.form {
	display: inline-block;
	vertical-align: top;

	padding: 1em;
	width: 30em;
}

.field {
	display: inline-block;
	vertical-align: top;

	&:not(:last-child) {
		margin-bottom: 1.5em;
	}

	width: 28em;

	label {
		vertical-align: top;
		display: inline-block;
		width: 8em;
		margin-right: 1em;
		text-align: right;
	}

	&.required {
		label:after {
			content: '*';
			color: @highlight;
		}
	}

	.error-message {
		margin-top: 0.5em;
		margin-left: 10em;
		width: 10em;
		text-align: left;
	}

	&.error {
		margin-bottom: 1em;

		.input {
			border: 2px solid @error;
		}
	}

	.input {
		height: 2em;
		width: 18em;
		padding: 0px 10px;
		outline: none;
		border: none;
		font-size: 12pt;
		vertical-align: top;
		color: @text;
		background-color: @input;
		transition: color .5s, background-color .5s;

		font-family: @text-font;

		&:hover {
			background-color: @focused-input;
		}
	}

	textarea.input {
		padding: 10px;
		height: 15em;
		resize: none;
	}

	input[type="file"].input {
		line-height: 2em;
	}
}

//	Modal styles.
.modal {
	position: fixed;
	text-align: left;
	top: 0px;
	width: 100%;
	height: 100%;
	z-index: 101;
	background-color: rgba(0, 0, 0, 0.5);
	display: none;

	&.open {
		display: block;
	}

	.panel {
		z-index: 100;
		display: inline-block;
		position: relative;
		padding: 10px;
		top: 50%;
		left: 50%;
		background-color: @background;
		transform: translate(-50%, -50%);

		.close {
			position: absolute;
			top: 10px;
			left: 10px;
			cursor: pointer;

			&:hover {
				color: @title;
			}
		}
	}
}

//	Visiblity modifiers.
.invisible {
	visibility: hidden !important
}
.hidden {
	display: none !important;
}

.full-height {
	height: 100%;
}

.full-width {
	width: 100%;
}

//	Text-alignment modifier.
.align-right {
	text-align: right !important;
}
.align-left {
	text-align: left !important;
}
.align-center {
	text-align: center !important;
}

//	Default mixin classes.
.inline-block {
	display: inline-block;
}

//	Spacing.
.padding {
	padding: 8px;
}
.margin {
	margin: 8px;
}

.indent, 
.indent-left {
	margin-left: 15px;
}
.indent-right {
	margin-right: 15px;
}

button,
input[type="submit"] {
	border: none;
	outline: none;
	display: inline-block;
	vertical-align: middle;
	
	height: 1.5em;
	line-height: 1.5em;

	margin: 0px 10px;
	padding: 0px 12px;
	font-size: 13pt;
	font-family: @text-font;
	color: @background;
	background-color: @theme1;
	transition: .1s color;
	text-align: center;
	text-decoration: none;
	
	&.good {
		background-color: @success;
	}
	&.bad {
		background-color: @error;
	}
	&.open {
		background-color: @theme2;
	}
	
	&:hover {
		cursor: pointer;
		background-color: @highlight;
	}
}

//	Root page contents.
.row {
	width: 100%;
	position: relative;

	text-align: center;
}

.component {
	display: inline-block;
	vertical-align: top;
	padding: 15px;
	margin: 15px;
	overflow-wrap: break-word;

	&.flat {
		background-color: inherit;
	}

	&.col-12 {
		width: e('calc(100% - 30px)');
	}
	&.col-9 {
		width: e('calc(75% - 30px)');
	}
	&.col-8 {
		width: e('calc(66.6666666666% - 30px)');
	}
	&.col-6 {
		width: e('calc(50% - 30px)');
	}
	&.col-5 {
		width: e('calc(41.6666666666% - 30px)');
	}
	&.col-4 {
		width: e('calc(33.333333333333% - 30px)');
	}
	&.col-3 {
		width: e('calc(25% - 30px)');
	}

	@media screen and (max-width: @breakpoint1){
		&.col-12,
		&.col-9 {
			width: e('calc(100% - 30px)');
		}
		
		&.col-6 {
			width: e('calc(66.66666666% - 30px)');
		}

		&.col-4 {
			width: e('calc(50% - 30px)');
		}
		
		&.col-3 {
			width: e('calc(33.333333% - 30px)');
		}
	}

	@media screen and (max-width: @breakpoint2) {
		&.col-6 {
			width: e('calc(100% - 30px)');
		}
		
		&.col-3 {
			width: e('calc(50% - 30px)');
		}
	}

	@media screen and (max-width: @breakpoint3) {
		&.col-4,
		&.col-3 {
			width: e('calc(100% - 30px)');
		}
	}
}

//	Preformatted.
pre {
	padding: 10px;
	text-align: left;
	overflow-x: auto;
	color: @text;
	background-color: @input;

	code {
		display: inline-block;
		font-size: 10pt;
		width: 100%;
	}
}

code {
	background-color: @input;
}

//	Tooltip area.
.tooltip {
	display: inline-block;
	position: fixed;
	z-index: 1000;
	font-size: 10pt;
	max-width: 350px;
	padding: 3px 5px;
	padding-bottom: 0px;
	border-radius: 2px;
	background-color: @highlight;
	color: @background;
	transform: translate(20%, -120%);

	&::after {
		content: "";
		display: inherit;
		position: relative;
		bottom: -5px;
		width: 0px; 
		height: 0px; 
		line-height: 0px;
		border-left: 5px solid transparent;
		border-right: 5px solid transparent;
		border-top: 5px solid @highlight;
	}
}

//	Message area.
.flash-message {
	display: inline-block;
	position: fixed;
	bottom: 0px;
	left: 0px;
	margin: 20px;
	padding: 10px;
	background-color: @highlight;
	color: @background;
	z-index: 1000;
}

.dnd {
	&.target {
		cursor: -webkit-grab;
		cursor: grab;
	}

	&.drag {
		pointer-events: none;
		position: fixed;
		opacity: 0.5;
	}
}