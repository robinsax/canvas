//	The base style definitions, including helpers for common layout needs.
//
//	Specificity is minimized to allow plugin styles to always precedence.

//	Clear margin and padding U.A. styles.
* {
	margin: 0px;
	padding: 0px;
	box-sizing: border-box;
}

//	Define the container mixin.
.container(){
	width: 100%;
	height: 100%;
	font-size: 12pt;
}

//	Primary container layouts.
html, body {
	.container();
}

.page {
	.container();
	font-family: @content_font;
	background-color: @base_background2;
	color: @text_text;

	& > .content {
		position: relative;
		overflow-y: auto;
	}
}

.meta-body {
	display: none;
}

//	Pointer modifiers.
[cv-tooltip]:not([cv-event]) {
	cursor: help;
}

[cv-event],
[cv-mapped-event] {
	cursor: pointer;
}

//	Link styles.
a {
	color: @text_link;

	&:not(.button):visited {
		color: @text_link_clicked;
	}

	&.clear {
		text-decoration: none;
		color: @text_text;
	}
}

//	Paragraph styles.
p {
	margin: 15px 0px;
	font-size: 12pt;
	line-height: 1.4;
	color: @text_text;
}

p, li {
	line-height: 1.5;
}

.subtext {
	color: @text_subtext;
	font-size: 10pt;
}

//	Heading styles.
h1, h2, h3, h4 {
	margin: 15px 0px;
	font-size: 40pt; 
	font-weight: normal;
	font-family: @title_font;
	color: @text_title;
}
h2 { font-size: 25pt; }
h3 { font-size: 18pt; }
h4 { font-size: 16pt; }

//	Form styles.
form {
	.error-summary {
		color: @error_level_error;
	}

	.field {
		margin-bottom: 34px;

		.icon {
			width: 40px;
			padding-left: 0px;
			margin-right: 10px;
			font-size: 16pt;
		}

		.label {
			display: inline-block;
			width: 100px;
			margin-right: 10px;
			text-align: left;
		}

		.error-desc {
			display: none;
			margin-top: 5px;
			max-width: 450px;
			text-align: left;
		}

		&.error {
			margin-bottom: 10px;

			input, textarea {
				border: 2px solid @error_level_error;
			}

			.error-desc {
				display: inline-block;
			}
		}
		
		&.textarea {
			.icon, .label {
				vertical-align: top;
			}
		}

		input,
		select,
		textarea {
			height: 40px;
			max-width: 450px;
			padding: 0px 10px;
			outline: none;
			border: none;
			font-size: 12pt;
			vertical-align: top;
			color: @misc_text;
			background-color: @misc_background1;
			transition: color .5s, background-color .5s;

			&.error-highlight {
				color: @error_level_label;
				background-color: @error_level_error;
			}

			&:hover {
				background-color: @misc_background2;
			}
		}

		//	Field-type specific styles.
		textarea {
			height: 200px;
			padding: 10px;
		}

		.checkbox-wrap {
			display: inline-block;
			max-width: 450px;
			height: 40px;
			text-align: left;

			input[type="checkbox"] {
				position: relative;
				top: 5px;
				height: 18px;
				width: 30px;
				margin: 0px;
			}
		}
		
		.form-width {
			max-width: 450px;
		}

		//	Field component scaling mixins based on icon/label/error border
		//	presence.
		.field_variant(@sel, @lwidth){
			&.@{sel} {
				input:not([type="checkbox"]), select, textarea, .form-width, .checkbox-wrap {
					width: e('calc(100% - ')@{lwidth}e('px)');
				}
			}
		}

		.field_variant_error(@sel, @lwidth){
			&.@{sel} .error-desc {
				width: e('calc(100% - ')@{lwidth}e('px)');
				margin-left: @{lwidth}px;
			}
		}

		.field_variant('iconed:not(.labeled)', 50);
		.field_variant_error('iconed.error:not(.labeled)', 54);
		.field_variant('labeled:not(.iconed)', 130);
		.field_variant_error('labeled.error:not(.iconed)', 134);
		.field_variant('iconed.labeled', 180);
		.field_variant_error('labeled.iconed.error', 184);
	}
}

//	Modal styles.
.modal {
	position: fixed;
	top: 0px;
	width: 100%;
	height: 100%;
	background-color: rgba(0, 0, 0, 0.5);
	cursor: default !important;

	.panel {
		display: inline-block;
		position: relative;
		padding: 10px;
		top: 50%;
		left: 50%;
		background-color: @base_background2;
		transform: translate(-50%, -50%);
		cursor: default;

		.closer {
			cursor: pointer;
			float: right;
		}
	}

	//	TODO: What is this style.
	.error .error-desc {
		display: block !important;
	}
}

//	Visiblity modifiers.
.invisible {
	visibility: hidden !important
}
.hidden {
	display: none !important;
}

//	Text-alignment modifier.
.align-right {
	text-align: right !important;
}
.align-left {
	text-align: left !important;
}
.align-center {
	text-align: center !important;
}

//	Default mixin classes.
.inline-block {
	display: inline-block;
}

//	Spacing.
.padding {
	padding: 8px;
}
.margin {
	margin: 8px;
}

.indent, 
.indent-left {
	margin-left: 15px;
}
.indent-right {
	margin-right: 15px;
}

//	Buttons and button groups.
.button {
	display: inline-block;
	vertical-align: middle;
	height: 40px;
	margin-right: 10px;
	padding: 0px 15px;
	font-size: 15pt;
	line-height: 40px;
	color: @base_background1;
	background-color: @base_theme1;
	border-bottom: 4px solid @base_theme1;
	transition: .1s color;
	text-align: center;
	text-decoration: none;
	
	&.confirm {
		background-color: @error_level_success;
	}
	&.cancel {
		background-color: @error_level_error;
	}

	&.texted:not(.icon-right) .icon {
		margin-right: 10px;
	}
	&.texted.icon-right .icon {
		margin-left: 10px;
	}

	&.open {
		background-color: @base_theme2;
	}
	
	&:hover {
		cursor: pointer;
		border-bottom: 4px solid @base_theme2;
	}

	&.small {
		height: 25px;
		font-size: 10pt;
		line-height: 25px;
	}
}

//	Button groups.
.control-group,
.control-group-left {
	text-align: left;
}
.control-group-right {
	text-align: right;

	.button {
		margin-left: 0px;
		margin-right: 10px;
	}
}

//	Icon-only buttons.
.event-icon {
	width: 10px;
	vertical-align: middle;
	margin: 0px 10px;
	font-size: 12px;
	text-decoration: none;
	color: @text_subtext;
	transition: color 0.5s;
	
	&:hover {
		color: @base_highlight;
	}
}

//	Root page contents.
.row {
	width: 100%;
	position: relative;
}

.component {
	display: inline-block;
	vertical-align: top;
	padding: 15px;
	margin: 15px;
	background-color: @base_background1;
	overflow-wrap: break-word;

	&.flat {
		background-color: inherit;
	}

	&.col-12 {
		width: e('calc(100% - 30px)');
	}
	&.col-9 {
		width: e('calc(75% - 30px)');
	}
	&.col-8 {
		width: e('calc(66.6666666666% - 30px)');
	}
	&.col-6 {
		width: e('calc(50% - 30px)');
	}
	&.col-5 {
		width: e('calc(41.6666666666% - 30px)');
	}
	&.col-4 {
		width: e('calc(33.333333333333% - 30px)');
	}
	&.col-3 {
		width: e('calc(25% - 30px)');
	}

	@media screen and (max-width: @breakpoint_1){
		&.col-12,
		&.col-9 {
			width: e('calc(100% - 30px)');
		}
		
		&.col-6 {
			width: e('calc(66.66666666% - 30px)');
		}

		&.col-4 {
			width: e('calc(50% - 30px)');
		}
		
		&.col-3 {
			width: e('calc(33.333333% - 30px)');
		}
	}

	@media screen and (max-width: @breakpoint_2) {
		&.col-6 {
			width: e('calc(100% - 30px)');
		}
		
		&.col-3 {
			width: e('calc(50% - 30px)');
		}
	}

	@media screen and (max-width: @breakpoint_3) {
		&.col-4,
		&.col-3 {
			width: e('calc(100% - 30px)');
		}
	}
}

//	Preformatted.
pre {
	padding: 15px;
	text-align: left;
	overflow-x: auto;
	color: @misc_text;
	background-color: @misc_background1;

	code {
		display: inline-block;
		font-size: 10pt;
		width: 100%;
	}
}

code {
	background-color: @misc_background1;
}

//	Tooltip area.
.tooltip {
	display: inline-block;
	position: absolute;
	z-index: 1000;
	font-size: 10pt;
	max-width: 350px;
	padding: 3px 5px;
	padding-bottom: 0px;
	background-color: @base_highlight;
	color: @base_background2;
	transform: translateY(-100%);

	&::after {
		content: "";
		display: inherit;
		position: relative;
		bottom: -5px;
		width: 0px; 
		height: 0px; 
		line-height: 0px;
		border-left: 5px solid transparent;
		border-right: 5px solid transparent;
		border-top: 5px solid @base_highlight;
	}
}

//	Message area.
.flash-message {
	display: inline-block;
	position: fixed;
	bottom: 0px;
	left: 0px;
	margin: 20px;
	padding: 10px;
	background-color: @base_highlight;
	color: @base_background2;
	z-index: 1000;
}
